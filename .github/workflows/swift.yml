name: Swift

on: [push]

jobs:
  ubuntu:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
      
  macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: swift build -v
    - name: Run tests
      run: swift test -v
    
  ios:
    runs-on: macOS-latest
    strategy:
          matrix:
            destination: ['platform=iOS Simulator,OS=13.1,name=iPhone 8']
            xcode: ['/Applications/Xcode_11.6.app/Contents/Developer']
    steps:
    - uses: actions/checkout@v1
    # Github Actions' machines do in fact have recent versions of Xcode,
    # but you may have to explicitly switch to them.  We explicitly want
    # to use Xcode 11, so we use xcode-select to switch to it.
    - name: Switch to Xcode 11
      run: sudo xcode-select --switch /Applications/Xcode_11.6.app
    # Since we want to be running our tests from Xcode, we need to
    # generate an .xcodeproj file.  Luckly, Swift Package Manager has
    # build in functionality to do so.
    - name: Generate xcodeproj
      run: swift package generate-xcodeproj
    # Finally, we invoke xcodebuild to run the tests on an iPhone 11
    # simulator.
    - name: Run tests
      run: xcodebuild test -destination 'name=iPhone 11' -scheme 'Object-Package'
